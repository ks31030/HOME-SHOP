package com.kh.springdb.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.kh.springdb.model.Cart;
import com.kh.springdb.model.CartProduct;
import com.kh.springdb.model.Product;
import com.kh.springdb.service.CartService;

@Controller
@RequestMapping("/cart")
public class CartController {
	
	private final CartService cartService;
	
	@Autowired
    public CartController(CartService cartService) {
        this.cartService = cartService;
    }
	
    @GetMapping("/view")
    public String viewCart(Model model) {
        // 카트에 담긴 상품 목록을 조회하거나 처리하는 로직을 추가할 수 있습니다.
        // 모델에 필요한 데이터를 추가하고 카트 페이지로 이동합니다.
        return "cart_view";
    }

 // 장바구니에 상품 추가
    @PostMapping("/add")
    public String addToCart(@RequestParam("productId") int productId) {
        // 현재 사용자의 장바구니 정보 조회
        Cart cart = cartService.getCartForCurrentUser(); // 사용자에 따라 구현 필요
        // 선택한 상품 정보 조회
        Product product = productService.getProductById(productId);
        // 상품을 장바구니에 추가
        CartProduct cartProduct = new CartProduct(product);
        cartService.addToCart(cart, cartProduct);
        // 성공 메시지 등을 모델에 추가하여 상품 목록 페이지로 이동
        return "redirect:/product/list?success=true";
    }

    @GetMapping("/remove")
    public String removeFromCart(/* 필요한 매개변수들 */) {
        // 카트에서 상품을 제거하는 로직을 추가할 수 있습니다.
        // 상품 제거 후 리다이렉트 또는 다른 처리를 수행할 수 있습니다.
        return "redirect:/cart/view";
    }

}
