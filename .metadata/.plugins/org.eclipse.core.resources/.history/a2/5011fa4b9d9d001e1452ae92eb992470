package com.kh.springdb.repository;

import org.springframework.stereotype.Repository;

import com.kh.springdb.model.Cart;

import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import jakarta.persistence.TypedQuery;

@Repository
public class CartRepository {

    @PersistenceContext
    private EntityManager entityManager;

    // 장바구니에 정보 저장
    public void saveCart(Cart cart) {
        // 실제 데이터베이스에 저장하는 로직을 추가합니다.
        // 예를 들어, entityManager.persist(cart) 등의 코드를 사용합니다.
    }

    // 장바구니 정보 조회
    public Cart getCartById(/* 장바구니 ID 또는 다른 식별자 */) {
        // 실제 데이터베이스에서 장바구니 정보를 조회하는 로직을 추가합니다.
        return new Cart(); // 예시로 더미 데이터를 반환합니다.
    }

    // 사용자명(username)을 기반으로 장바구니 정보 조회
    public Cart getCartByUsername(String username) {
        // 실제 데이터베이스에서 사용자명을 기반으로 장바구니 정보를 조회하는 쿼리를 작성합니다.
        String jpql = "SELECT c FROM Cart c WHERE c.user.username = :username";
        TypedQuery<Cart> query = entityManager.createQuery(jpql, Cart.class);
        query.setParameter("username", username);

        try {
            return query.getSingleResult();
        } catch (Exception e) {
            return null; // 사용자명에 해당하는 장바구니가 없을 경우 null을 반환하거나 예외 처리를 수행합니다.
        }
    }
}
