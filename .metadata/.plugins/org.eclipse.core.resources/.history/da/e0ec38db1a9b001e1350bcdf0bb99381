package com.kh.springdb.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.kh.springdb.model.Comment;
import com.kh.springdb.model.Product;
import com.kh.springdb.repository.CommentRepository;
import com.kh.springdb.repository.ProductRepository;

@Service
public class CommentService {

	@Autowired
	private CommentRepository commentRepository;
	
	@Autowired
	private ProductRepository productRepository;
	
	//댓글 추가 메서드
	public Comment addComment(int productId, String content) {
		Product product = productRepository.findById(productId).orElse(null);
		//만약 상품이 존재하지 않을 경우 댓글 또한 존재하지 않으므로, 댓글이 존재할 수 없음을 예외처리
		if(product == null) {
			throw new RuntimeException("찾는 상품은 존재하지 않습니다.");
		}
		//댓글을 생성하기 위한 생성자 작성
		Comment comment = new Comment();
		comment.setProduct(product);
		comment.setContent(content);
		return commentRepository.save(comment);
	}
	//댓글 수정 메서드
	public Comment updateComment(Long commentId, String newContent) {
		Comment existingComment = getCommentById(commentId);
		
		// Check if the comment exists
		if (existingComment == null) {
			throw new RuntimeException("Comment not found");
		}
		
		// Update the content
		existingComment.setContent(newContent);
		
		// Save and return the updated comment
		return commentRepository.save(existingComment);
	}
	
	// Id에 의해 Comment를 불러 오는 도움 메서드
	private Comment getCommentById(Long commentId) {
		return commentRepository.findById(commentId)
				.orElse(null);
	}
	
	//댓글 삭제 메서드
	public void deleteComment(Long productId) {
		commentRepository.deleteById(productId);
	}
}